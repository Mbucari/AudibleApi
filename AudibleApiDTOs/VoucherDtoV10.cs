// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using AudibleApiDTOs;
//
//    var voucherDtoV10 = VoucherDtoV10.FromJson(jsonString);

namespace AudibleApiDTOs
{
    using System;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Linq;

    public partial class VoucherDtoV10
    {
        [JsonProperty("key")]
        public string Key { get; set; }

        [JsonProperty("iv")]
        public string Iv { get; set; }

        [JsonProperty("refreshDate")]
        public DateTimeOffset RefreshDate { get; set; }

        [JsonProperty("removalOnExpirationDate")]
        public DateTimeOffset RemovalOnExpirationDate { get; set; }

        [JsonProperty("rules")]
        public Rule[] Rules { get; set; }
    }

    public partial class Rule
    {
        [JsonProperty("parameters")]
        public Parameter[] Parameters { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class Parameter
    {
        [JsonProperty("expireDate", NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeOffset? ExpireDate { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("directedIds", NullValueHandling = NullValueHandling.Ignore)]
        public string[] DirectedIds { get; set; }
    }

    public partial class VoucherDtoV10
    {
        public static VoucherDtoV10 FromJson(string json) => JsonConvert.DeserializeObject<VoucherDtoV10>(json, AudibleApiDTOs.Converter.Settings);
    }   
}
